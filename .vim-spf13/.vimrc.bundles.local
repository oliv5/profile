" Legacy bundles config {
	" Leader key mappings
	let mapleader = g:spf13_leader
	let maplocalleader = g:spf13_localleader

	" Disable unused plugins
	let g:loaded_bbye = 1
	let g:loaded_project = 1
	let g:loaded_taglist = 1
	"let g:loaded_tagbar = 1
	let g:loaded_srcexpl = 1
	"let g:loaded_nerd_tree = 1
	let g:loaded_trinity = 1
	let g:ccvext_version = 1
	let g:loaded_yankring = 1
	let g:loaded_cctree = 1
	let g:command_t_loaded = 1
	let g:loaded_minibufexplorer = 1
	"let g:loaded_yaifa = 1
	"let g:loaded_ctrlp = 1
	let g:loaded_buftabs = 1
	let g:loaded_easytags = 1
	let g:c_complete_loaded = 1
	let g:syntax_complete_loaded = 1
	let g:omnicpp_complete_loaded = 1
	let g:clang_complete_loaded = 1
	let g:loaded_commentary = 1

	" Load additional bundle config
	if filereadable(expand("~/.vim-legacy/.vimrc.bundles"))
		source ~/.vim-legacy/.vimrc.bundles
	endif
" }

" Additional bundles {
	Bundle 'minibufexpl'
	Bundle 'vim-autotag'
	Bundle 'vim-ide'
	Bundle 'yaifa'
" }

" Configure SPF13 plugins {
	" Disable unwanted SPF13 plugins
	UnBundle 'bling/vim-bufferline'
	UnBundle 'spf13/vim-autoclose'

	"----------------------
	" MRU feature using tlib_vim
	let s:idx_backward=0
	let s:idx_forward=0

	function! s:MRUbackward()
		let l:buflist=tlib#buffer#GetList(0,0,'mru')[0]
		let s:idx_forward=0
		if s:idx_backward<(len(l:buflist)-1)
			let s:idx_backward=(s:idx_backward+1)
		endif
		exe "b" l:buflist[s:idx_backward]
		" ---------------------------------
		"let l:buflist=tlib#buffer#GetList(0,0,'mru')[0]
		"let s:idx_backward=(s:idx_backward+1)
		"if s:idx_backward==len(l:buflist)
		"	" Skip 0, except if len=1
		"	let s:idx_backward=(s:idx_backward+1)%len(l:buflist)
		"endif
		"exe "b" l:buflist[s:idx_backward]
	endfunction

	function! s:MRUforward()
		let l:buflist=tlib#buffer#GetList(0,0,'mru')[0]
		let s:idx_backward=0
		if s:idx_forward<(len(l:buflist)-1)
			let s:idx_forward=(s:idx_forward+1)
		endif
		exe "b" l:buflist[s:idx_forward]
		" ---------------------------------
		"let l:buflist=tlib#buffer#GetList(0,0,'mru')[0]
		"let s:idx_forward=(s:idx_forward+1)
		"if s:idx_forward>=len(l:buflist)
		"	" Skip 0, except if len=1
		"	let s:idx_forward=(s:idx_forward+1)%len(l:buflist)
		"endif
		"exe "b" l:buflist[s:idx_forward]
	endfunction

	command! -nargs=0 -bar MRUbackward	call s:MRUbackward()
	command! -nargs=0 -bar MRUforward	call s:MRUforward()

	FnNoremap <C-Tab>		:MRUbackward<CR>
	FnNoremap <C-S-Tab>		:MRUforward<CR>
	"----------------------

	" CtrlpFunky
	FnNoremap <C-o><C-o>	:CtrlPFunky<CR>
" }
