" General {
	set updatetime=1000  " Swap file write / CursorHold  evt delay (in ms)
	set shell=/bin/bash\ --rcfile\ ~/.bashrc\ -i    " Set shell, load user profile
	set secure      " Security mode
	set noexrc      " don't read .vimrc in current directory

	" Force write with sudo after opening the file
	cmap w!! w !sudo tee % >/dev/null
" }

" UI settings, theme & color scheme {
	if has('syntax')
		colorscheme torte
		syntax on
	endif

	" Select font
	if has('gui_running') && !exists('g:loaded_vimrc')
		"set guifont=Lucida_Console:h11
		set guifont=Monospace\ 9
	endif
" }

" Text formatting {
	" Cursor
	set nocursorline
	set scrolloff=0
	if has('gui_running')
		set nu
		map <localleader>n  :set nu!<CR>
	endif
	
	" Scroll bars
	if has('gui_running')
		set guioptions+=rbh
		set guioptions-=rl
	endif

	" Word/line wrap options
	set nowrap              " No wrap by default
	nnoremap <localleader>w  :set invwrap<CR>

	" Show all characters
	set nolist              " Do not show all characters by default
	nnoremap <localleader>c  :set invlist<CR>
" }

" Misc configuration {
	" Autocompletion
	imap <C-space>  <C-x><C-u>

	" Paste in terminal mode
	" Allow movement key in vi mode
	if !has("gui_running")
	  function! XTermPasteBegin()
		set pastetoggle=<Esc>[201~
		set paste
		return ""
	  endfunction
	  let &t_SI .= "\<Esc>[?2004h"
	  let &t_EI .= "\<Esc>[?2004l"
	  inoremap <special> <expr> <Esc>[200~ XTermPasteBegin()
	endif
"Â }

" Configure SPF13 plugins {
	" Disable unwanted SPF13 plugins
	UnBundle 'bling/vim-bufferline'
	UnBundle 'spf13/vim-autoclose'
	
	" MRU feature using tlib_vim
	"call tlib#buffer#EnableMRU()
	"FnNoremap <C-Tab>   :call tlib#buffer#DisableMRU()<BAR>exe "b" tlib#buffer#GetList(0,0,'mru')[0][1]<BAR>call tlib#buffer#EnableMRU()<CR>
	"FnNoremap <C-S-Tab> :call tlib#buffer#DisableMRU()<BAR>exe "b" tlib#buffer#GetList(0,0,'mru')[0][1]<BAR>call tlib#buffer#EnableMRU()<CR>
" }

" Use legacy after config if available {
	if filereadable(expand("~/.vim-legacy/.vimrc.after"))
		source ~/.vim-legacy/.vimrc.after
	endif
" }

" User profile end {
	let g:loaded_vimrc = 1
" }
