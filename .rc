#!/bin/sh
# Main user profile script
# Things should be compatible with all shells (dash, bash,...)

################################
# Set load flag
export ENV_RC=$((ENV_CNT=ENV_CNT+1))

################################
# List, load and reload profile scripts
alias rc='. "$HOME/.rc"'
alias load='rc_sourcefile "$HOME/.rc.d" 1 9999 -g=r ""'
alias profile='rc'

# Load scripts by pattern and perms
rc_sourcefile() {
  [ -z "$RC_SOURCEFILE" ] && RC_SOURCEFILE=1 || return 1
  local DIR="${1:-$HOME/.rc.d}"; shift
  local DEPTH_MIN="${1:-1}"; shift
  local DEPTH_MAX="${1:-1}"; shift
  local PERMS_ON="${1:--u=x}"; shift
  local PERMS_OFF="${1}"; shift
  local RESULT=1
  local PATTERN
  for PATTERN in "${@:-*}"; do
    for SCRIPT in $(find "$DIR" ${DEPTH_MIN:+-mindepth $DEPTH_MIN} ${DEPTH_MAX:+-maxdepth $DEPTH_MAX} -path "*$PATTERN.sh" -not -path '*/test/*' ${PERMS_ON:+-perm $PERMS_ON} ${PERMS_OFF:+! -perm $PERMS_OFF} -prune -print | sort); do
      echo "Loading $SCRIPT"
      . "$SCRIPT" && RESULT=0 || RESULT=1
    done
  done
  unset RC_SOURCEFILE
  return $RESULT
}

# Load executable scripts from given directory
# Declare the associated ENV_ variable
rc_sourcedir() {
  for DIR; do
    local DIRNAME="$(basename "$DIR" | sed -r 's/\./_/g; s/^_//g; s/(.*)/\U\1/')"
    eval "export ENV_$DIRNAME=$((ENV_CNT=ENV_CNT+1))"
    rc_sourcefile "$DIR"
  done
}

rc_list() {
  echo "List of autoloaded scripts"
  find "$HOME/.rc.d" -name '*.sh' -type f -perm -u=x -printf '%P\n'
  echo "List of non-autoloaded scripts"
  find "$HOME/.rc.d" -name '*.sh' -type f -perm -u=r ! -perm -u=x -printf '%P\n'
  echo "List of disabled scripts"
  find "$HOME/.rc.d" -name '*.sh' -type f ! -perm -u=r -printf '%P\n'
}

################################
# Load .profile when not already done
if [ -z "$ENV_PROFILE" ] && [ -r "$HOME/.profile" ]; then
  . "$HOME/.profile"
fi

# Load local configuration script
if [ -r "$HOME/.rc.local" ]; then
  export ENV_RC_LOCAL=$((ENV_CNT=ENV_CNT+1))
  . "$HOME/.rc.local"
fi

# Load profile scripts
rc_sourcedir "$HOME/.rc.d"
if [ ! -z "$BASH_VERSION" ]; then
  rc_sourcedir "$HOME/.rc.d/bash"
fi
rc_sourcedir "$HOME/.rc.d/local"

# Load user-defined scripts
if [ ! -z "$RC_AUTOLOAD" ]; then
  rc_sourcefile "$HOME/.rc.d" 1 9999 -g=r -u=x "$RC_AUTOLOAD"
fi

################################
# Setup path
path_prepend "$HOME/bin" "$HOME/.local/bin" "$HOME/bin/profile"
path_append /bin /sbin /usr/bin /usr/sbin /usr/local/bin /usr/local/sbin
path_cleanup

# Remove some aliases/fct shortcuts
cmd_unset which find grep awk sed xargs cut

################################
# User anacron
if [ -r "${HOME}/.anacron/anacrontab" ]; then
  mkdir -p "${HOME}/.anacron/spool"
  anacron -s -t "${HOME}/.anacron/anacrontab" -S "${HOME}/.anacron/spool"
fi

# Start ssh-agent when not already running
pgrep -u $USER ssh-agent >/dev/null || eval $(ssh-agent)

# Disable console beep
#command -v xset >/dev/null 2>&1 && pidof X >/dev/null && xset b off 2>/dev/null # From X11 window system
command -v xset >/dev/null 2>&1 && xset b off 2>/dev/null # From X11 window system
command -v setterm >/dev/null 2>&1 && setterm -blength 0  # From the system console

################################
# Alias ls
alias l='ls -CF'
alias la='ls -A'
alias ll='ls -laF'
alias lsg='ls | grep'

# Alias cd/back
alias b='cdb'
alias f='cdf'
alias p='cd ..'

# Gvim
alias e='gvim'
alias sse='ss | cut -c 9- | xargs gvim'
alias gse='gs | grep modified | cut -d : -f 2 | xargs gvim'

# Search and open
ffe() { ff "$@" | xargs gvim; }
ffc() { ff "$@" | xargs $PAGER; }
ffg() { ff "$@" | xargs $GEDITOR; }
ffo() { ff "$@" | xargs mimeopen; }

# Gedit/geany
g() {
  eval "${GEDITOR:-false}" "$@"
}
alias ssg='ss | cut -c 9- | xargs g'
alias gsg='gs | grep modified | cut -d : -f 2 | xargs g'
ffg() {
  ff "$@" | xargs g
}

# Source insight
alias s='si'

# Alias misc
alias hi='history'
alias mo='mimeopen'

################################
# Epilogue
# Set load flag
export ENV_LOADED=$ENV_CNT
export ENV_CNT
