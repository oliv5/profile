#!/bin/sh
# Main user profile script
# It should be compatible with all shells (dash, bash,...)

# Main source function
rc_source() {
  # Global variables
  export RC_DIR="${RC_DIR:-$HOME}"
  export RC_DIR_LOCAL="${RC_DIR_LOCAL:-$HOME}"

  # Local variables
  local RC_VERBOSE="${RC_VERBOSE:-false}"
  local RC_DRYRUN=""

  # Global aliases
  alias rc='rc_source'

  ##############
  # Log function
  rc_log() {
    ${RC_VERBOSE:-false} && echo "$@"
  }

  # Source file 
  rc_sourcefile() {
    for FILE; do
      if [ -r "$FILE" ]; then
        rc_log "Source '$FILE'"
        for FCT in $(awk -F'(' '/\w\s*\(\)/ {print $1}' "$FILE"); do
          unalias "$FCT" 2>/dev/null
        done
        set --; ${RC_DRYRUN} . "$FILE"
      fi
    done
  }

  # Source module when executable or listed in rc.list 
  rc_sourcemod() {
    for FILE; do
      if test -x "$FILE" || grep -e "${FILE##*/}" "${FILE%/*}/rc.list" >/dev/null 2>&1; then
        rc_sourcefile "$FILE"
      fi
    done
  }

  ##############
  # Process arguments
  local FLAGS OPTIND OPTARG OPTERR=0
  while getopts 'vd' FLAGS; do
    case "$FLAGS" in
      v) RC_VERBOSE="true";;
      d) RC_DRYRUN="true";;
      *) echo >&2 "Usage: .rc [-v] [-d]"
         echo >&2 "-v   verbose mode"
         echo >&2 "-d   dry-run"
         kill -INT $$
         ;;
    esac
  done
  shift $(expr $OPTIND - 1)

  ##############
  # Startup scripts
  local RC_CNT=$(($RC_CNT+1))
  if [ $# -eq 0 ]; then
    # Start loading scripts
    export ENV_RC=$((ENV_RC+1))
    rc_log "Source $RC_DIR/.rc"
    if [ -z "$ENV_PROFILE" ]; then # when not already done
      rc_sourcefile "$RC_DIR/.profile"
    fi
    rc_sourcefile "$RC_DIR_LOCAL/.rc.local"
  fi

  ##############
  # Main scripts
  for PATTERN in "${@:-*}"; do
    # Load scripts by pattern search
    rc_sourcemod "$RC_DIR/.rc.d/"*$PATTERN*.sh
    if [ -n "$BASH_VERSION" ]; then
      rc_sourcemod "$RC_DIR/.rc.d/bash/"*$PATTERN*.sh
    fi
    if [ -n "$ANDROID_ROOT" ]; then
      rc_sourcemod "$RC_DIR/.rc.d/android/"*$PATTERN*.sh
    fi
    rc_sourcemod "$RC_DIR_LOCAL/.rc.local.d/"*$PATTERN*.sh
    if [ -n "$BASH_VERSION" ]; then
      rc_sourcemod "$RC_DIR_LOCAL/.rc.local.d/bash/"*$PATTERN*.sh
    fi
    # Load explicit files/directories
    if [ -d "$PATTERN" ]; then
      rc_sourcemod "$PATTERN"/*.sh
    elif [ -r "$PATTERN" ]; then
      rc_sourcemod "$PATTERN"    
    fi   
  done

  ##############
  # End scripts
  if [ $# -eq 0 ]; then
    rc_sourcefile "$RC_DIR/.rc.end"
    rc_sourcefile "$RC_DIR_LOCAL/.rc.local.end"
    export ENV_RC_END=$((ENV_RC_END+1))
  fi

  ##############
  # Cleanup at the last nested call
  if [ $RC_CNT -eq 1 ]; then
    unset -f rc_log rc_sourcemod rc_sourcefile
  fi
  return 0
}

################################
# Source rc files
rc_source "$@"
