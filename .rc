#!/bin/sh
# Main user profile script
# It should be compatible with all shells (dash, bash,...)

# Main source function
rc_source() {
  # Global variables
  export RC_DIR="${RC_DIR:-$HOME}"
  export RC_DIR_LOCAL="${RC_DIR_LOCAL:-$HOME}"

  # Local variables
  local RC_VERBOSE="$RC_VERBOSE"
  local RC_DRYRUN="$RC_DRYRUN"
  local RC_ALL="$RC_ALL"
  local RC_ERR=0

  ##############
  # Log function
  rc_log() {
    eval "echo $@ ${RC_VERBOSE:->/dev/null}"
  }

  # Source file 
  rc_sourcefile() {
    for FILE; do
      if [ -r "$FILE" ]; then
        rc_log "Source '$FILE'"
        for FCT in $(awk -F'(' '/\w\s*\(\)/ {print $1}' "$FILE"); do
          ${RC_DRYRUN} unalias "$FCT" 2>/dev/null
        done
        set --; eval "${RC_DRYRUN} . '$FILE' ${RC_VERBOSE:->/dev/null}" || 
          { RC_ERR=$?; rc_log "Return status not null"; }
      fi
    done
  }

  # Source module when executable or listed in .rc.list 
  rc_sourcemod() {
    local LIST="$RC_DIR_LOCAL/.rc.list"
    set -- $@
    for FILE; do
      if [ -n "$RC_ALL" ] || test -x "$FILE" || grep -e "^${FILE##$RC_DIR/}\|^${FILE##$RC_DIR_LOCAL/}" "$LIST" >/dev/null 2>&1; then
        rc_sourcefile "$FILE"
      fi
    done
  }

  ##############
  # Process arguments
  local FLAGS OPTIND OPTARG OPTERR=0
  while getopts 'asvdr:l:' FLAGS; do
    case "$FLAGS" in
      a) RC_ALL="true";;
      s) RC_VERBOSE=">/dev/null 2>&1";;
      v) RC_VERBOSE=">&1";;
      d) RC_DRYRUN="true";;
      r) export RC_DIR="$OPTARG";;
      l) export RC_DIR_LOCAL="$OPTARG";;
      *) echo >&2 "Usage: .rc [-a] [-v] [-d]"
         echo >&2 "-a   load all scripts"
         echo >&2 "-s   silent mode"
         echo >&2 "-v   verbose mode"
         echo >&2 "-d   dry-run"
         kill -INT $$
         return 1
         ;;
    esac
  done
  shift $(expr $OPTIND - 1)

  ##############
  # Startup scripts
  local RC_CNT=$(($RC_CNT+1))
  if [ $# -eq 0 ]; then
    # Start loading scripts
    export ENV_RC=$((ENV_RC+1))
    rc_log "Source $RC_DIR/.rc"
    if [ -z "$ENV_PROFILE" ]; then # when not already done
      rc_sourcefile "$RC_DIR/.profile"
    fi
    rc_sourcefile "$RC_DIR_LOCAL/.rc.local"
  fi

  ##############
  # Main scripts
  set +f # Enable glob expansion
  for PATTERN in "${@:-*}"; do
    # Load scripts by pattern search
    rc_sourcemod "$RC_DIR/.rc.d/*$PATTERN*.sh"
    if [ -n "$BASH_VERSION" ]; then
      rc_sourcemod "$RC_DIR/.rc.d/bash/*$PATTERN*.sh"
    fi
    if [ -n "$ANDROID_ROOT" ]; then
      rc_sourcemod "$RC_DIR/.rc.d/android/*$PATTERN*.sh"
    fi
    #rc_sourcemod "$RC_DIR_LOCAL/.rc.local.d/*$PATTERN*.sh"
    #if [ -n "$BASH_VERSION" ]; then
    #  rc_sourcemod "$RC_DIR_LOCAL/.rc.local.d/bash/*$PATTERN*.sh"
    #fi
    # Load explicit files/directories
    if [ -d "$PATTERN" ]; then
      rc_sourcemod "$PATTERN/*.sh"
    elif [ -r "$PATTERN" ]; then
      rc_sourcemod "$PATTERN"
    fi   
  done

  ##############
  # End scripts
  if [ $# -eq 0 ]; then
    rc_sourcefile "$RC_DIR/.rc.end"
    rc_sourcefile "$RC_DIR_LOCAL/.rc.local.end"
    export ENV_RC_END=$((ENV_RC_END+1))
  fi

  ##############
  # Cleanup at the last nested call
  if [ $RC_CNT -eq 1 ]; then
    unset -f rc_log rc_sourcemod rc_sourcefile
    unset RC_VERBOSE RC_DRYRUN RC_ALL
  fi
  return $RC_ERR
}

################################
# Global aliases
alias rc='rc_source'

# Source rc files
[ -z "$RC_NOAUTOLOAD" -o $# -gt 0 ] && rc_source "$@"
