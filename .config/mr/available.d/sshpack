[${PRIVATE:-$HOME}/sshpack]
checkout = git_clone "$(mr_ask "Remote repo to clone")" "$(mr_ask "Remote repo name")";
           annex_init && annex_init_hubic;
           git config hooks.nobinaries true;
           git annex wanted hubic 'exclude=*.gpg exclude=*.kdbx'

bundle   = git_bundle "${PRIVATE:-$HOME}/repo/sync/git/bundle" "" "Olivier Lanneluc <olivier.lanneluc@gmail.com>";
           annex_bundle "${PRIVATE:-$HOME}/repo/sync/git/bundle"

pull     = git_pull rpi master
push     = git_push rpi master
sync     = annex_sync

download = annex_copy . --from hubic --auto
upload   = annex_copy . --to hubic --auto

status   = git status -s && annex_status
diff     = annex_diff
gdm      = git difftool -y -t meld --

gitk     = gitk
gc       = git gc
meta     = git_meta

lib      =
    fixups() {
        find -L "$MR_REPO" -type d -execdir chmod 700 {} \;
        find -L "$MR_REPO" -type f -execdir chmod 600 {} \;
        find -L "$MR_REPO" -type f -name "*.sh" -execdir chmod +x {} \;
    }
