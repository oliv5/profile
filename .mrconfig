[DEFAULT]

# Global mr fct helpers
lib = 
	mr_execute() {
		CMD="$1"; shift
		if git config --bool vcsh.vcsh >/dev/null; then
			REPO="$(basename $MR_REPO .git)"
			CMD="vcsh run $REPO"
		fi
		eval $CMD sh -c \""$@"\"
	}
# Add few git actions
lib =
	git_clone() {
		REPO=$(basename $MR_REPO .git)
		git clone "$1" $REPO
		cd "$REPO"
		if [ ! -z "$2" ]; then git remote rename origin "$2"; fi
	}
	git_pull() {
		mr_execute "" "
			git stash save -q 'mrconfig_stash'
			for REMOTE in $1; do
				if git remote | grep -- \\\$REMOTE >/dev/null; then
					for BRANCH in $2; do
						git pull --rebase \\\$REMOTE \\\$BRANCH
					done
				fi
			done
			if git stash list -n 1 | grep 'mrconfig_stash' >/dev/null 2>&1; then git stash apply -q --index; git stash drop -q; fi
		"
	}
	git_push() {
		for REMOTE in $1; do
			if git remote | grep -- $REMOTE >/dev/null; then
				for BRANCH in $2; do
					echo -n "Push $REMOTE/$BRANCH : "
					git push $REMOTE $BRANCH
				done
			fi
		done
	}
	git_bundle() {
		DIR="${1:-.}"
		DATE="$(date +%Y%m%d-%H%M%S)"
		BUNDLE="$DIR/${2:-$(basename $MR_REPO .git).bundle.$(uname -n).$DATE.git}"
		git bundle create "$BUNDLE" --all --tags --remotes
		annex_bundle "$@"
	}

# Define vcsh helpers
lib =
	vcsh_clone() {
		REPO=$(basename $MR_REPO .git)
		vcsh clone "$@" "$REPO" &&
		if [ ! -z "$2" ]; then vcsh run "$REPO" git remote rename origin "$2"; fi
	}

# Define git annex helpers
lib =
	annex_clone() {
		git_clone "$@" &&
		git annex init "$(uname -n)"
	}
	annex_clone_direct() {
		annex_clone "$@" &&
		git annex direct
	}
	annex_sync() {
		execute "" "git annex sync"
	}
	annex_status() {
		if git config --get annex.version >/dev/null; then
			git annex status
		fi
		if ! git config --get annex.direct >/dev/null; then
			git status -s "$@"
		fi
	}
	annex_bundle() {
		if git config --get annex.version >/dev/null; then
			DIR="${1:-.}"
			TAR="$DIR/${3:-$(basename $MR_REPO .git).annex.$(uname -n).tgz}"
			echo "tar annex into $TAR"
			#tar czf "$TAR" ./ -h --exclude-vcs
			find . -type l -print0 | xargs -0 tar czf "$TAR" -h --exclude-vcs
		fi
	}

# Include our repositories
include = cat ${XDG_CONFIG_HOME:-$HOME/.config}/mr/config.d/*
