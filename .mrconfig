[DEFAULT]

# Global mr fct helpers
lib = 
	mr_execute() {
		CMD="$1"; shift
		if git config --bool vcsh.vcsh >/dev/null; then
			REPO="$(basename $MR_REPO .git)"
			CMD="vcsh run $REPO"
		fi
		eval $CMD sh -c \""$@"\"
	}
# Add few git actions
lib =
	git_clone() {
		REPO=$(basename $MR_REPO .git)
		git clone "$1" $REPO
		cd "$REPO"
		if [ ! -z "$2" ]; then git remote rename origin "$2"; fi
	}
	git_pull() {
		mr_execute "" "
			git stash save -q 'mrconfig_stash'
			for REMOTE in $1; do
				if git remote | grep -- \\\$REMOTE >/dev/null; then
					for BRANCH in $2; do
						git pull --rebase \\\$REMOTE \\\$BRANCH
					done
				fi
			done
			if git stash list -n 1 | grep 'mrconfig_stash' >/dev/null 2>&1; then git stash apply -q --index; git stash drop -q; fi
		"
	}
	git_push() {
		for REMOTE in $1; do
			if git remote | grep -- $REMOTE >/dev/null; then
				for BRANCH in $2; do
					echo -n "Push $REMOTE/$BRANCH : "
					git push $REMOTE $BRANCH
				done
			fi
		done
	}
	git_bundle() {
		DIR="${1:-.}"
		if [ -d "$DIR" ]; then
			DATE="$(date +%Y%m%d-%H%M%S)"
			BUNDLE="$DIR/${2:-$(basename $MR_REPO .git).bundle.$(uname -n).$DATE.git}"
			git bundle create "$BUNDLE" --all --tags --remotes
			if [ ! -z "$3" ]; then
				gpg -v --output "${BUNDLE}.gpg" --encrypt --recipient "$3" "${BUNDLE}" && 
					(wipe -f -- "${BUNDLE}" || rm -- "${BUNDLE}")
			fi
		else
			echo "Target directory '$DIR' does not exists."
			echo "Skip bundle creation..."
		fi
	}
	git_meta() {
		git-cache-meta.sh --store && 
			git add "$MR_REPO/.git_cache_meta" -f
	}

# Define vcsh helpers
lib =
	vcsh_clone() {
		REPO=$(basename $MR_REPO .git)
		vcsh clone "$@" "$REPO" &&
		if [ ! -z "$2" ]; then vcsh run "$REPO" git remote rename origin "$2"; fi
	}

# Define git annex helpers
lib =
	annex_init() {
		git annex init "$(uname -n)"
	}
	annex_init_direct() {
		annex_init "$@" &&
		git annex direct
	}
	annex_sync() {
		execute "" "git annex sync"
	}
	annex_status() {
		git annex status
		if ! git config --get annex.direct >/dev/null; then
			git status -s "$@"
		fi
	}
	annex_diff() {
		if ! git config --get annex.direct >/dev/null; then
			git diff "$@"
		fi
	}
	annex_bundle() {
		if git config --get annex.version >/dev/null; then
			DIR="${1:-.}"
			if [ -d "$DIR" ]; then
				DATE="$(date +%Y%m)"
				BUNDLE="$DIR/${2:-$(basename $MR_REPO .git).annex.$(uname -n).$DATE.tgz}"
				echo "tar annex into $BUNDLE"
				#tar czf "$BUNDLE" ./ -h --exclude-vcs
				if git config --get annex.direct >/dev/null; then
					find . -type f -not -path '*.git*' -print0 | xargs -0 tar czf "$BUNDLE" -h --exclude-vcs
				else
					find . -type l -print0 | xargs -0 tar czf "$BUNDLE" -h --exclude-vcs
				fi
				if [ ! -z "$3" ]; then
					gpg -v --output "${BUNDLE}.gpg" --encrypt --recipient "$3" "${BUNDLE}" && 
						(wipe -f -- "${BUNDLE}" || rm -- "${BUNDLE}")
				fi
			else
				echo "Target directory '$DIR' does not exists."
				echo "Skip bundle creation..."
			fi
		else
			echo "Directory '$DIR' is not git-annex ready."
			echo "Skip bundle creation..."
		fi
	}

# Include our repositories
include = cat ${XDG_CONFIG_HOME:-$HOME/.config}/mr/config.d/*
