# ~/.screenrc
# note: use showkey -a to find key codes

#Â set shell
shell $SHELL

# scrollback
defscrollback 4000

# create initial windows
screen 1 $SHELL -c "export DISPLAY=$SCREEN_DISPLAY; $SHELL"

# set the caption on the bottom line:
# from http://diveintomark.org/public/2007/03/screenrc
caption always "%{= kw}%-w%{= BW}%n %t%{-}%+w %-= %1`"

# use regular audible bell and don't tell me when bells happen in other windows
vbell off
bell_msg ""

# skip intro
startup_message off

# detach on disconnect
autodetach on

# make search case-insensitive
ignorecase on

# use backtick for prefix key instead of Ctrl-A
#escape ``

# Disable delay when entering copy mode
msgminwait 0

# Set "xterm*" terminals tweeks
# String capabilities
#  te   End program that uses cursor motion
#  ti   Begin program that uses cursor motion
#  @    turn entry off
termcapinfo xterm* ti@:te@

# Bindings for default behaviour - may not be needed
# - C-g and other keys quit copy mode.
#markkeys \033=\015=^G
# - Special hack for C-e, since it should go *past* the last char.
#bindkey -m ^e stuff "\$l"

# Set the second mark, write to the screen-exchange
# file, and use xsel to synchronize the paste buffer
# with the X selection.
# from http://snarfed.org/synchronizing_gnu_screens_paste_buffer_and_the_x_selection
# http://snarfed.org/dotfiles/.screenrc
bindkey -m "^ " eval "stuff ' '" writebuf "exec sh -c 'xsel -i < /tmp/screen-exchange'"

# Window management
bind c screen 1			# Open new windows from index 1
bind ^c screen 1
bind 0 select 10
bind "^z" next
bind "^q" prev
#bindkey "^[[21;2~" select 0 # S-F10= screen 0
#bindkey "^[O1;2P" select 1  # S-F1 = screen 1
#bindkey "^[O1;2Q" select 2  # S-F2 = screen 2
#bindkey "^[O1;2R" select 3  # S-F3 = screen 3
#bindkey "^[O1;2S" select 4  # S-F4 = screen 4
#bindkey "^[[15;2~" select 5 # S-F5 = screen 5
#bindkey "^[[17;2~" select 6 # S-F6 = screen 6
#bindkey "^[[18;2~" select 7 # S-F7 = screen 7
#bindkey "^[[19;2~" select 8 # S-F8 = screen 8
#bindkey "^[[20;2~" select 9 # S-F9 = screen 9
#bindkey "^[[23;2~" prev     # S-F11 = prev
#bindkey "^[[24;2~" next     # S-F12 = next
#bindkey "^[O1;5S" kill		# C-F4 = kill

# Split management
bind s eval "split" "focus down" "screen 1"
bind v eval "split -v" "focus left" "screen 1"
bind d remove
bind o only
bind f fit

# Cursor management
bindkey "^[[1;5A" focus up
bindkey "^[[1;5B" focus down
bindkey "^[[1;5C" focus right
bindkey "^[[1;5D" focus left

# Set PgUp/C-Home enter copy mode immediatly
#bindkey -t -k "kP" eval "copy" "stuff ^b"
#bindkey -t -k "kN" eval "copy" "stuff ^f"
#bindkey -m kP stuff ^b
#bindkey -m kN stuff ^f

# Focus management
# http://www.staldal.nu/tech/2009/01/10/how-to-use-ctrl-tab-in-gnu-screen/
# Ctrl-Tab
bindkey "^[[27;5;9~" next
# Ctrl-Shift-Tab
bindkey "^[[27;6;9~" prev

# UTF-8
utf8 on

##################################
# Trial bindings
#bind ' ' windows # space key displays a list of windows
#bind ^f screen telnet foobar # C-f to the command "create a window with a TELNET connection to foobar"
#bind \033 screen -ln -t root -h 1000 9 su # bind ESC to the command that creates an non-login window with title `root' in slot #9, with a super-user shell and a scrollbackbuffer of 1000 lines
#bindkey -t foo stuff barfoo
#bindkey "^j" stuff "user-mode ctrl-j"
#bindkey "^[j" stuff "user-mode alt-j"
#bindkey -m "^j" stuff "copy-mode ctrl-j"
#bindkey "^u^t" stuff "user-mode ctrl-u t"
